!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BenchMark	bench_etree.py	/^class BenchMark(benchbase.TreeBenchMark):$/;"	c
BenchMark	bench_objectify.py	/^class BenchMark(benchbase.TreeBenchMark):$/;"	c
SEARCH_TAG	benchbase.py	/^    SEARCH_TAG = "{cdefg}a00001"$/;"	v	class:TreeBenchMark
SkippedTest	benchbase.py	/^class SkippedTest(Exception):$/;"	c
TEXT	bench_etree.py	/^TEXT  = "some ASCII text"$/;"	v
TREE_FACTOR	benchbase.py	/^TREE_FACTOR = 1 # increase tree size with '-l \/ '-L' cmd option$/;"	v
TreeBenchMark	benchbase.py	/^class TreeBenchMark(object):$/;"	c
UTEXT	bench_etree.py	/^UTEXT = u"some klingon: \\F8D2"$/;"	v
XPathBenchMark	bench_xpath.py	/^class XPathBenchMark(benchbase.TreeBenchMark):$/;"	c
XSLTBenchMark	bench_xslt.py	/^class XSLTBenchMark(benchbase.TreeBenchMark):$/;"	c
_ATTRIBUTES	benchbase.py	/^_ATTRIBUTES = {$/;"	v
_LIB_NAME_MAP	benchbase.py	/^    _LIB_NAME_MAP = {$/;"	v	class:TreeBenchMark
_TEXT	benchbase.py	/^_TEXT  = "some ASCII text" * TREE_FACTOR$/;"	v
_UTEXT	benchbase.py	/^_UTEXT = u"some klingon: \\F8D2" * TREE_FACTOR$/;"	v
__init__	bench_objectify.py	/^    def __init__(self, lib):$/;"	m	class:BenchMark
__init__	benchbase.py	/^    def __init__(self, etree, etree_parser=None):$/;"	m	class:TreeBenchMark
_all_trees	benchbase.py	/^    def _all_trees(self):$/;"	m	class:TreeBenchMark
_permutations	benchbase.py	/^        def _permutations(prefix, remainder, count):$/;"	f	function:TreeBenchMark._permutations
_permutations	benchbase.py	/^    def _permutations(self, seq, count):$/;"	m	class:TreeBenchMark
_serialize_tree	benchbase.py	/^    def _serialize_tree(self, root):$/;"	m	class:TreeBenchMark
_setup_tree1	benchbase.py	/^    def _setup_tree1(self, text, attributes):$/;"	m	class:TreeBenchMark
_setup_tree2	benchbase.py	/^    def _setup_tree2(self, text, attributes):$/;"	m	class:TreeBenchMark
_setup_tree3	benchbase.py	/^    def _setup_tree3(self, text, attributes):$/;"	m	class:TreeBenchMark
_setup_tree4	benchbase.py	/^    def _setup_tree4(self, text, attributes):$/;"	m	class:TreeBenchMark
_tree_builder_name	benchbase.py	/^    def _tree_builder_name(self, tree, tn, an):$/;"	m	class:TreeBenchMark
atoz	benchbase.py	/^    atoz = string.ascii_lowercase$/;"	v	class:TreeBenchMark
bench_XML	bench_etree.py	/^    def bench_XML(self, root_xml):$/;"	m	class:BenchMark
bench_annotate	bench_objectify.py	/^    def bench_annotate(self, root):$/;"	m	class:BenchMark
bench_append_elements	bench_etree.py	/^    def bench_append_elements(self, root):$/;"	m	class:BenchMark
bench_append_from_document	bench_etree.py	/^    def bench_append_from_document(self, root1, root2):$/;"	m	class:BenchMark
bench_attribute	bench_objectify.py	/^    def bench_attribute(self, root):$/;"	m	class:BenchMark
bench_attribute_assign_int	bench_objectify.py	/^    def bench_attribute_assign_int(self, root):$/;"	m	class:BenchMark
bench_attribute_assign_string	bench_objectify.py	/^    def bench_attribute_assign_string(self, root):$/;"	m	class:BenchMark
bench_attribute_cached	bench_objectify.py	/^    def bench_attribute_cached(self, root):$/;"	m	class:BenchMark
bench_attributes_deep	bench_objectify.py	/^    def bench_attributes_deep(self, root):$/;"	m	class:BenchMark
bench_attributes_deep_cached	bench_objectify.py	/^    def bench_attributes_deep_cached(self, root):$/;"	m	class:BenchMark
bench_clear	bench_etree.py	/^    def bench_clear(self, root):$/;"	m	class:BenchMark
bench_create_elements	bench_etree.py	/^    def bench_create_elements(self, children):$/;"	m	class:BenchMark
bench_create_subelements	bench_etree.py	/^    def bench_create_subelements(self, children):$/;"	m	class:BenchMark
bench_deepcopy	bench_etree.py	/^    def bench_deepcopy(self, children):$/;"	m	class:BenchMark
bench_deepcopy_all	bench_etree.py	/^    def bench_deepcopy_all(self, root):$/;"	m	class:BenchMark
bench_descendantpaths	bench_objectify.py	/^    def bench_descendantpaths(self, root):$/;"	m	class:BenchMark
bench_elementmaker	bench_objectify.py	/^    def bench_elementmaker(self, children):$/;"	m	class:BenchMark
bench_findall	bench_etree.py	/^    def bench_findall(self, root):$/;"	m	class:BenchMark
bench_findall_child	bench_etree.py	/^    def bench_findall_child(self, root):$/;"	m	class:BenchMark
bench_findall_path	bench_etree.py	/^    def bench_findall_path(self, root):$/;"	m	class:BenchMark
bench_findall_tag	bench_etree.py	/^    def bench_findall_tag(self, root):$/;"	m	class:BenchMark
bench_first_child	bench_etree.py	/^    def bench_first_child(self, root):$/;"	m	class:BenchMark
bench_get_attributes	bench_etree.py	/^    def bench_get_attributes(self, children):$/;"	m	class:BenchMark
bench_get_children_slice	bench_etree.py	/^    def bench_get_children_slice(self, children):$/;"	m	class:BenchMark
bench_get_children_slice_2x	bench_etree.py	/^    def bench_get_children_slice_2x(self, children):$/;"	m	class:BenchMark
bench_getchildren	bench_etree.py	/^    def bench_getchildren(self, children):$/;"	m	class:BenchMark
bench_getiterator_all	bench_etree.py	/^    def bench_getiterator_all(self, root):$/;"	m	class:BenchMark
bench_getiterator_islice	bench_etree.py	/^    def bench_getiterator_islice(self, root):$/;"	m	class:BenchMark
bench_getiterator_tag	bench_etree.py	/^    def bench_getiterator_tag(self, root):$/;"	m	class:BenchMark
bench_getiterator_tag_all	bench_etree.py	/^    def bench_getiterator_tag_all(self, root):$/;"	m	class:BenchMark
bench_getiterator_tag_none	bench_etree.py	/^    def bench_getiterator_tag_none(self, root):$/;"	m	class:BenchMark
bench_getiterator_tag_text	bench_etree.py	/^    def bench_getiterator_tag_text(self, root):$/;"	m	class:BenchMark
bench_has_children	bench_etree.py	/^    def bench_has_children(self, children):$/;"	m	class:BenchMark
bench_index	bench_etree.py	/^    def bench_index(self, root):$/;"	m	class:BenchMark
bench_index_slice	bench_etree.py	/^    def bench_index_slice(self, root):$/;"	m	class:BenchMark
bench_index_slice_neg	bench_etree.py	/^    def bench_index_slice_neg(self, root):$/;"	m	class:BenchMark
bench_insert_from_document	bench_etree.py	/^    def bench_insert_from_document(self, root1, root2):$/;"	m	class:BenchMark
bench_iter_children	bench_etree.py	/^    def bench_iter_children(self, root):$/;"	m	class:BenchMark
bench_iter_children_reversed	bench_etree.py	/^    def bench_iter_children_reversed(self, root):$/;"	m	class:BenchMark
bench_iterfind	bench_etree.py	/^    def bench_iterfind(self, root):$/;"	m	class:BenchMark
bench_iterfind_islice	bench_etree.py	/^    def bench_iterfind_islice(self, root):$/;"	m	class:BenchMark
bench_iterfind_tag	bench_etree.py	/^    def bench_iterfind_tag(self, root):$/;"	m	class:BenchMark
bench_iterparse_stringIO	bench_etree.py	/^    def bench_iterparse_stringIO(self, root_xml):$/;"	m	class:BenchMark
bench_iterparse_stringIO_clear	bench_etree.py	/^    def bench_iterparse_stringIO_clear(self, root_xml):$/;"	m	class:BenchMark
bench_last_child	bench_etree.py	/^    def bench_last_child(self, root):$/;"	m	class:BenchMark
bench_len	bench_etree.py	/^    def bench_len(self, children):$/;"	m	class:BenchMark
bench_makeelement	bench_etree.py	/^    def bench_makeelement(self, children):$/;"	m	class:BenchMark
bench_middle_child	bench_etree.py	/^    def bench_middle_child(self, root):$/;"	m	class:BenchMark
bench_multiple_iter_tag	bench_xpath.py	/^    def bench_multiple_iter_tag(self, children):$/;"	m	class:XPathBenchMark
bench_multiple_xpath_or	bench_xpath.py	/^    def bench_multiple_xpath_or(self, children):$/;"	m	class:XPathBenchMark
bench_objectpath	bench_objectify.py	/^    def bench_objectpath(self, root):$/;"	m	class:BenchMark
bench_objectpath_deep	bench_objectify.py	/^    def bench_objectpath_deep(self, root):$/;"	m	class:BenchMark
bench_objectpath_deep_cached	bench_objectify.py	/^    def bench_objectpath_deep_cached(self, root):$/;"	m	class:BenchMark
bench_parse_stringIO	bench_etree.py	/^    def bench_parse_stringIO(self, root_xml):$/;"	m	class:BenchMark
bench_remove_children	bench_etree.py	/^    def bench_remove_children(self, root):$/;"	m	class:BenchMark
bench_remove_children_reversed	bench_etree.py	/^    def bench_remove_children_reversed(self, root):$/;"	m	class:BenchMark
bench_reorder	bench_etree.py	/^    def bench_reorder(self, root):$/;"	m	class:BenchMark
bench_reorder_slice	bench_etree.py	/^    def bench_reorder_slice(self, root):$/;"	m	class:BenchMark
bench_replace_children	bench_etree.py	/^    def bench_replace_children(self, children):$/;"	m	class:BenchMark
bench_replace_children_element	bench_etree.py	/^    def bench_replace_children_element(self, children):$/;"	m	class:BenchMark
bench_root_getchildren	bench_etree.py	/^    def bench_root_getchildren(self, root):$/;"	m	class:BenchMark
bench_root_list_children	bench_etree.py	/^    def bench_root_list_children(self, root):$/;"	m	class:BenchMark
bench_rotate_children	bench_etree.py	/^    def bench_rotate_children(self, root):$/;"	m	class:BenchMark
bench_set_attributes	bench_etree.py	/^    def bench_set_attributes(self, children):$/;"	m	class:BenchMark
bench_set_text	bench_etree.py	/^    def bench_set_text(self, children):$/;"	m	class:BenchMark
bench_set_utext	bench_etree.py	/^    def bench_set_utext(self, children):$/;"	m	class:BenchMark
bench_setget_attributes	bench_etree.py	/^    def bench_setget_attributes(self, children):$/;"	m	class:BenchMark
bench_tag	bench_etree.py	/^    def bench_tag(self, children):$/;"	m	class:BenchMark
bench_tag_repeat	bench_etree.py	/^    def bench_tag_repeat(self, children):$/;"	m	class:BenchMark
bench_text	bench_etree.py	/^    def bench_text(self, children):$/;"	m	class:BenchMark
bench_text_repeat	bench_etree.py	/^    def bench_text_repeat(self, children):$/;"	m	class:BenchMark
bench_tostring_text_ascii	bench_etree.py	/^    def bench_tostring_text_ascii(self, root):$/;"	m	class:BenchMark
bench_tostring_text_unicode	bench_etree.py	/^    def bench_tostring_text_unicode(self, root):$/;"	m	class:BenchMark
bench_tostring_text_utf16	bench_etree.py	/^    def bench_tostring_text_utf16(self, root):$/;"	m	class:BenchMark
bench_tostring_text_utf8_with_tail	bench_etree.py	/^    def bench_tostring_text_utf8_with_tail(self, children):$/;"	m	class:BenchMark
bench_tostring_utf16	bench_etree.py	/^    def bench_tostring_utf16(self, root):$/;"	m	class:BenchMark
bench_tostring_utf8	bench_etree.py	/^    def bench_tostring_utf8(self, root):$/;"	m	class:BenchMark
bench_tostring_utf8_unicode_XML	bench_etree.py	/^    def bench_tostring_utf8_unicode_XML(self, root):$/;"	m	class:BenchMark
bench_type_inference	bench_objectify.py	/^    def bench_type_inference(self, root):$/;"	m	class:BenchMark
bench_type_inference_annotated	bench_objectify.py	/^    def bench_type_inference_annotated(self, root):$/;"	m	class:BenchMark
bench_write_utf8_parse_stringIO	bench_etree.py	/^    def bench_write_utf8_parse_stringIO(self, root):$/;"	m	class:BenchMark
bench_xpath_class	bench_xpath.py	/^    def bench_xpath_class(self, children):$/;"	m	class:XPathBenchMark
bench_xpath_class_repeat	bench_xpath.py	/^    def bench_xpath_class_repeat(self, children):$/;"	m	class:XPathBenchMark
bench_xpath_element	bench_xpath.py	/^    def bench_xpath_element(self, root):$/;"	m	class:XPathBenchMark
bench_xpath_extensions	bench_xpath.py	/^    def bench_xpath_extensions(self, children):$/;"	m	class:XPathBenchMark
bench_xpath_method	bench_xpath.py	/^    def bench_xpath_method(self, children):$/;"	m	class:XPathBenchMark
bench_xpath_old_extensions	bench_xpath.py	/^    def bench_xpath_old_extensions(self, children):$/;"	m	class:XPathBenchMark
bench_xpath_path	bench_etree.py	/^    def bench_xpath_path(self, root):$/;"	m	class:BenchMark
bench_xslt_document	bench_xslt.py	/^    def bench_xslt_document(self, root):$/;"	f
bench_xslt_extensions_old	bench_xslt.py	/^    def bench_xslt_extensions_old(self, root):$/;"	m	class:XSLTBenchMark
benchmarks	benchbase.py	/^    def benchmarks(self):$/;"	m	class:TreeBenchMark
buildSuites	benchbase.py	/^def buildSuites(benchmark_class, etrees, selected):$/;"	f
build_treeset_name	benchbase.py	/^def build_treeset_name(trees, tn, an, serialized, children):$/;"	f
children	benchbase.py	/^def children(function):$/;"	f
et_make_clone_factory	benchbase.py	/^    def et_make_clone_factory(self, elem):$/;"	m	class:TreeBenchMark
generate_elem	benchbase.py	/^        def generate_elem(append, elem, level):$/;"	f	function:TreeBenchMark.et_make_clone_factory
initArgs	benchbase.py	/^def initArgs(argv):$/;"	f
main	benchbase.py	/^def main(benchmark_class):$/;"	f
nochange	benchbase.py	/^def nochange(function):$/;"	f
onlylib	benchbase.py	/^def onlylib(*libs):$/;"	f
printSetupTimes	benchbase.py	/^def printSetupTimes(benchmark_suites):$/;"	f
repeat100	bench_objectify.py	/^    repeat100  = range(100)$/;"	v	class:BenchMark
repeat100	benchbase.py	/^    repeat100  = range(100)$/;"	v	class:TreeBenchMark
repeat1000	bench_objectify.py	/^    repeat1000 = range(1000)$/;"	v	class:BenchMark
repeat1000	benchbase.py	/^    repeat1000 = range(1000)$/;"	v	class:TreeBenchMark
repeat3000	bench_objectify.py	/^    repeat3000 = range(3000)$/;"	v	class:BenchMark
repeat500	benchbase.py	/^    repeat500  = range(500)$/;"	v	class:TreeBenchMark
return_child	bench_xpath.py	/^        def return_child(_, elements):$/;"	f	function:XPathBenchMark.bench_xpath_extensions
return_child	bench_xpath.py	/^        def return_child(_, elements):$/;"	f	function:XPathBenchMark.bench_xpath_old_extensions
return_child	bench_xslt.py	/^        def return_child(_, elements):$/;"	f	function:.bench_xslt_extensions_old
runBench	benchbase.py	/^def runBench(suite, method_name, method_call, tree_set, tn, an,$/;"	f
runBenchmarks	benchbase.py	/^def runBenchmarks(benchmark_suites, benchmarks):$/;"	f
serialized	benchbase.py	/^def serialized(function):$/;"	f
set_libs	benchbase.py	/^    def set_libs(function):$/;"	f	function:onlylib
set_property	benchbase.py	/^            def set_property(root, fname):$/;"	f	function:TreeBenchMark.__init__
set_value	benchbase.py	/^    def set_value(function):$/;"	f	function:with_attributes
set_value	benchbase.py	/^    def set_value(function):$/;"	f	function:with_text
tree_builder	benchbase.py	/^    def tree_builder(self, tree, tn, an, serial, children):$/;"	m	class:TreeBenchMark
with_attributes	benchbase.py	/^def with_attributes(*use_attributes):$/;"	f
with_text	benchbase.py	/^def with_text(no_text=False, text=False, utext=False):$/;"	f
